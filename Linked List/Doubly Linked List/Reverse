/* Function to reverse a Doubly Linked List */(Swapping pointers)

public static Node reverseDLL(Node  head)
{
    //Your code here
    if(head.next==null) return head;
    Node prev=null;
    while(head!=null){
        temp=head.prev;
        head.prev=head.next;
        head.next=temp;
        head=head.prev;
    }
    head=temp.prev;
    return head;
}

 /* Function to reverse a Doubly Linked List using Stacks (Swapping data)
     */
    void reverse()
    {
        Stack<Integer> stack = new Stack<>();
        Node temp = head;
        while (temp != null)
        {
            stack.push(temp.data);
            temp = temp.next;
        } 
        // added all the elements sequemce wise in the
        // stack
        temp = head;
        while (temp != null) 
        {
            temp.data = stack.pop();
            temp = temp.next;
        } 
        // popped all the elements and the added in the
        // linked list,
        // which are in the reversed order.
    }
